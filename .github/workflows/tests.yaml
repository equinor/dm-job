on:
  # Workflow dispatch is used for manual triggers
  workflow_dispatch:
  # Workflow call is used for called from another workflow
  workflow_call:
    secrets:
      ACR_SECRET:
        required: false

env:
  IMAGE_REGISTRY: datamodelingtool.azurecr.io
  API_IMAGE: datamodelingtool.azurecr.io/dm-job

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pre-commit
        run: pip install pre-commit

      # Caches the venv at the end of the job and reloads for quicker pre-commit.
      # Uses pyproject.toml and pre-commit-config file to create hash.
      - name: Cache venv
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ~/work/dm-job/dm-job/.venv
            ~/.cache/pre-commit
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up venv
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install

      - name: Run pre-commit
        run: pre-commit run --all-files --verbose

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Build API image
        run: |
          echo ${{ secrets.ACR_SECRET }} | docker login $IMAGE_REGISTRY -u datamodelingtool --password-stdin
          docker pull $API_IMAGE
          DOCKER_BUILDKIT=1 docker build --target development --tag job-api-development --cache-from $API_IMAGE .

      - name: Pytest tests
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d
          sleep 50  # Wait for database to be ready
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml run dmss reset-app
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml run job-api dm --url http://dmss:5000 reset ../app
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml run --rm job-api pytest -c ../pyproject.toml --integration
